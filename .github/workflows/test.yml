name: test

on:
  #repository_dispatch:
  workflow_dispatch:
    inputs:
      device:
        description: 'select device to build'
        default: 'r2s'
        required: false

jobs:

  build:
   
    runs-on: ubuntu-18.04
    env:
      DEVICE: ${{ github.event.client_payload.device || github.event.inputs.device }}
    if: github.repository_owner=='My-Compile'
    
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Generate firmware
        run: |
          sudo sysctl vm.swappiness=0
          nohup sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk &
          cd
          sudo curl -sL https://raw.githubusercontent.com/huyunlei2020/R2S/zstd-bin/zstd | sudo tee /usr/bin/zstd > /dev/null
          for i in {1..10}
          do
            curl -sL --fail https://github.com/huyunlei2020/sshactions/releases/download/cache/lede.$DEVICE.img.zst.0$i || break
          done | zstdmt -d -o lede.img
          LOOP_DEVICE=$(losetup -f) && echo "LOOP_DEVICE=$LOOP_DEVICE" >> $GITHUB_ENV
          sudo losetup -P --direct-io $LOOP_DEVICE lede.img
          mkdir lede && sudo mount -o nossd,compress=zstd $LOOP_DEVICE lede
          cd lede
          cat $GITHUB_WORKSPACE/$DEVICE.config.seed > .config
          make defconfig && make -j$(($(nproc) + 1))
          mkdir -p $GITHUB_WORKSPACE/release
          mv $(ls -1 ./bin/targets/*/*/*img.gz) $GITHUB_WORKSPACE/release/$DEVICE.img.gz
          cd $GITHUB_WORKSPACE/release/ && md5sum $DEVICE.img.gz > $DEVICE.img.md5
          echo "strDate=$(TZ=UTC-8 date +%Y-%m-%d)" >> $GITHUB_ENV
          echo "strDevice=$(echo $DEVICE | awk '{print toupper($0)}')" >> $GITHUB_ENV
          
      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.workflow_token }}
          file: ./release/*
          tag: ${{env.strDate}}
          file_glob: true
          overwrite: true
          release_name: ${{env.strDate}} 自动发布
